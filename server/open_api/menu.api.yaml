tags:
  - name: foods
    description: Food operations

paths:
  /menus:
    get:
      summary: Get all foods
      description: Retrieve a list of all food items
      operationId: getFoods
      tags:
        - foods
      responses:
        '200':
          description: List of food items retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Food items retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Food'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Internal server error"
                  data: null

    post:
      summary: Create a new food
      description: Add a new food item to the database
      operationId: createFood
      tags:
        - foods
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - price
                - description
                - image
                - category
              properties:
                name:
                  type: string
                  example: Pizza
                price:
                  type: string
                  example: 15.99
                description:
                  type: string
                  example: Delicious pizza with cheese
                image:
                  type: string
                  format: binary
                category:
                  type: string
                  example: Pizza
      responses:
        '201':
          description: Food created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Food created successfully"
                  data:
                    $ref: '#/components/schemas/Food'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Invalid input data"
                  data: null
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Internal server error"
                  data: null

  /menus/{id}:
    get:
      summary: Get a food by ID
      description: Retrieve details of a food item by its ID
      operationId: getFood
      tags:
        - foods
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Food ID
      responses:
        '200':
          description: Food item retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Food retrieved successfully"
                  data:
                    $ref: '#/components/schemas/Food'
        '404':
          description: Food not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Food not found"
                  data: null
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Internal server error"
                  data: null

    put:
      summary: Update a food by ID
      description: Update details of a food item
      operationId: updateFood
      tags:
        - foods
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Food ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Updated Pizza
                price:
                  type: number
                  example: 18.99
                description:
                  type: string
                  example: Updated description
      responses:
        '200':
          description: Food updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Food updated"
                  data:
                    $ref: '#/components/schemas/Food'
        '404':
          description: Food not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Food not found"
                  data: null
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Invalid input data"
                  data: null
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Internal server error"
                  data: null

    delete:
      summary: Delete a food by ID
      description: Remove a food item from the database
      operationId: deleteFood
      tags:
        - foods
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Food ID
      responses:
        '200':
          description: Food deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Food deleted"
                  data: null
        '404':
          description: Food not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Food not found"
                  data: null
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Internal server error"
                  data: null

components:
  schemas:
    Food:
      type: object
      properties:
        id:
          type: string
          example: "614b1b7754d1f90012345678"
        name:
          type: string
          example: Pizza
        price:
          type: number
          example: 15.99
        description:
          type: string
          example: Delicious pizza with cheese
        image:
          type: string
          example: "http://example.com/images/pizza.jpg"
        createdAt:
          type: string
          format: date-time
          example: "2024-10-16T12:34:56Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-10-16T12:34:56Z"
